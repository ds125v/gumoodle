<?php
// $Id: courseview.php,v 1.2 2008/11/18 11:29:18 Niall Exp $
//  Display the course home page.
// added because confirm_sesskey() needs to return true for switching role (and in various other places)

function tmp_confirm_sesskey() {
    return true;
}
require_once($CFG->dirroot.'/calendar/lib.php'); /// This is after login because it needs $USER
$course->format = clean_param($course->format, PARAM_ALPHA);
if (!file_exists('format/'.$course->format.'/format.php')) {
    $course->format = 'weeks'; // Default format is weeks
}
$PAGE = page_create_object(PAGE_COURSE_VIEW, $course->id);
$pageblocks = blocks_setup($PAGE, BLOCKS_PINNED_BOTH);
//NSFB-experiment, filter pageblocks
/* Plan is to eventually change most blocks into HTML blocks that represent an archived version
of the actual block. The block may contain links to an archived version of its content that will
be generated by the block processing code.
*/
//echo "<pre>"; print_r($pageblocks); echo "</pre>";
foreach($pageblocks['l'] as $blk){
    prepareArchiveBlock($blk);
}
foreach($pageblocks['r'] as $blk){
    prepareArchiveBlock($blk);
}
//NSFB-experiment-ends
$SESSION->fromdiscussion = $CFG->wwwroot .'/course/view.php?id='. $course->id;
$useajax = false;
echo getTemplateHeader(get_string('course').': '.$course->fullname, $course->fullname, build_archive_navigation());
echo '<div class="course-content">';
/* This call to get_fast_modinfo($course); is duplicated in the course/lib when printing
sections, and this causes problems since that is then used to control some aspects of
visibility. To get arround that I will have to pass this version in, or do my
own modifications in my own copy of course/lib.php function print_section.

Best approach would tidy up Moodle code a lot, and eliminate a wastefull db call,
but it would mean changes to core and might break something else. */
$modinfo =& get_fast_modinfo($course);
get_all_mods($course->id, $mods, $modnames, $modnamesplural, $modnamesused);
foreach($mods as $modid=>$unused) {
    if (!isset($modinfo->cms[$modid])) {
        rebuild_course_cache($course->id);
        $modinfo =& get_fast_modinfo($course);
        debugging('Rebuilding course cache', DEBUG_DEVELOPER);
        break;
    }
}
/* Now the mods are all loaded and stuff, so time to do my updates */
//    echo "<pre>"; print_r($modinfo); echo "</pre>";
//    echo "<pre>"; print_r($mods); echo "</pre>";
foreach($mods as $modid=>$unused) {
    //    	echo "<b>Module? $modid</b><br/>";
    //	    echo "<pre>"; print_r($unused); echo "</pre>";
    //		$unused->visible=0;  // greys it, something else needed to hide it..
    //        $modinfo->cms[$modid]->uservisible=0; // this hides it
}
if (! $sections = get_all_sections($course->id)) { // No sections found
    // Double-check to be extra sure
    if (! $section = get_record('course_sections', 'course', $course->id, 'section', 0)) {
        $section->course = $course->id; // Create a default section.
        $section->section = 0;
        $section->visible = 1;
        $section->id = insert_record('course_sections', $section);
    }
    if (! $sections = get_all_sections($course->id) ) { // Try again
        error('Error finding or creating section structures for this course');
    }
}
// Include the actual course format.
require('format/'. $course->format .'/format.php');
// Content wrapper end.
echo "</div>\n\n";
echo getTemplateFooter();
?>

